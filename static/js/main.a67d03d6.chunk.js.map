{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","Link","to","marginRight","Contacts","Fragment","Contact_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","fetch","then","response","json","EditContact","updConctat","match","params","put","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a67d03d6.chunk.js","sourcesContent":["import React , { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type)\r\n    {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state , \r\n                contacts : [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state ,\r\n                contacts : state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload)  : contact)\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts : [] ,\r\n        dispatch : action => {\r\n            this.setState(state => reducer(state,action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount()\r\n    {\r\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n       this.setState({\r\n           contacts : res.data\r\n       });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id,dispatch) => {\r\n\r\n    try {\r\n   await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n   dispatch({type:'DELETE_CONTACT',payload:id});\r\n  }catch(e){\r\n    dispatch({type:'DELETE_CONTACT',payload:id});\r\n   }\r\n\r\n   \r\n    \r\n\r\n  };\r\n\r\n  render() {\r\n    const { showContactInfo } = this.state;\r\n\r\n    const { name, email, phone , id } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h3>\r\n                {name}{\" \"}\r\n                <i\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                <i className=\"fas fa-pencil-alt\"  style={{\r\n                  cursor :'pointer' ,\r\n                  float : 'right',\r\n                  color : 'black',\r\n                  marginRight : '1rem'\r\n                }}></i>\r\n                </Link>\r\n\r\n              </h3>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n        const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  contact={contact}\r\n                  key={contact.id}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home\"></i> Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                 <i className=\"fas fa-plus\"></i> Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question\"></i> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,name,value,placeholder,type,onChange,error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        value={value}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={classnames('form-control form-control-lg' , {\r\n            'is-invalid' : error\r\n        })}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name : PropTypes.string.isRequired, \r\n    placeholder : PropTypes.string.isRequired, \r\n    value : PropTypes.string.isRequired, \r\n    type : PropTypes.string.isRequired,\r\n    onChange : PropTypes.func.isRequired,  \r\n    label : PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type : 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === '') {\r\n        this.setState({\r\n          errors: {\r\n            name: \"Name is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n  \r\n      if (email === '') {\r\n        this.setState({\r\n          errors: {\r\n            email: \"Email is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n  \r\n      if (phone === '') {\r\n        this.setState({\r\n          errors: {\r\n            phone: \"Phone is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(`https://jsonplaceholder.typicode.com/users` , newContact);\r\n\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: res.data\r\n    })\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">AddContact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry , that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        title : '' \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n      title : data.title\r\n  }))\r\n    }\r\n\r\n  render() {\r\n\r\n    const { title } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n\r\n    async componentDidMount()\r\n    {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name : contact.name,\r\n            email : contact.email,\r\n            phone : contact.phone\r\n        });\r\n    }\r\n\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === '') {\r\n        this.setState({\r\n          errors: {\r\n            name: \"Name is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n  \r\n      if (email === '') {\r\n        this.setState({\r\n          errors: {\r\n            email: \"Email is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n  \r\n      if (phone === '') {\r\n        this.setState({\r\n          errors: {\r\n            phone: \"Phone is required\"\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      const updConctat = {\r\n        name ,\r\n        email,\r\n        phone\r\n      }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updConctat);\r\n\r\n    dispatch({\r\n        type : 'UPDATE_CONTACT',\r\n        payload : res.data\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">EditContact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { BrowserRouter  as Router, Route, Switch } from \"react-router-dom\";\nimport About from './components/pages/About';\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}